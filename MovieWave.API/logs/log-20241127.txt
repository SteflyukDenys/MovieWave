{"@t":"2024-11-27T12:06:31.7552857Z","@mt":"Failed to determine the https port for redirect.","@l":"Warning","@tr":"5d505b097384557ad92eea5714dedaa3","@sp":"8207b2aec6f4c209","EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN8ERFMHRBPD:00000001","RequestPath":"/swagger","ConnectionId":"0HN8ERFMHRBPD"}
{"@t":"2024-11-27T15:38:20.5746705Z","@mt":"Failed to determine the https port for redirect.","@l":"Warning","@tr":"27ce238ce014af824c21a5abe02025e4","@sp":"3f9a217dceae78a2","EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN8EV61VI184:00000001","RequestPath":"/swagger","ConnectionId":"0HN8EV61VI184"}
{"@t":"2024-11-27T15:39:08.5515445Z","@mt":"Unable to get IAM security credentials from EC2 Instance Metadata Service.","@l":"Error","@x":"Amazon.Runtime.AmazonServiceException: Unable to get IAM security credentials from EC2 Instance Metadata Service.\r\n   at Amazon.Runtime.DefaultInstanceProfileAWSCredentials.FetchCredentials()\r\n   at Amazon.Runtime.DefaultInstanceProfileAWSCredentials.GetCredentials()\r\n   at Amazon.Runtime.DefaultInstanceProfileAWSCredentials.GetCredentialsAsync()\r\n   at Amazon.Runtime.Internal.CredentialsRetriever.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.RetryHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.RetryHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.S3.Internal.AmazonS3ExceptionHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.ErrorCallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.MetricsHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at MovieWave.Application.Services.StorageService.UploadFileAsync(FileDto fileDto, String folder) in C:\\Users\\denis\\source\\repos\\MovieWave\\MovieWave.Application\\Services\\StorageService.cs:line 34\r\n   at BannerController.CreateBanner(CreateBannerDto dto, UploadFileRequest request) in C:\\Users\\denis\\source\\repos\\MovieWave\\MovieWave.API\\Controllers\\BannerController.cs:line 45\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Prometheus.HttpMetrics.HttpRequestDurationMiddleware.Invoke(HttpContext context)\r\n   at Prometheus.HttpMetrics.HttpRequestCountMiddleware.Invoke(HttpContext context)\r\n   at Prometheus.HttpMetrics.HttpInProgressMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at MovieWave.API.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext httpContext) in C:\\Users\\denis\\source\\repos\\MovieWave\\MovieWave.API\\Middlewares\\ExceptionHandlingMiddleware.cs:line 22","@tr":"76f8700fe3aa757c5679570118eb6c6a","@sp":"4399f2ff4844f206","RequestId":"0HN8EV61VI187:00000001","RequestPath":"/api/v1/banner/create","ConnectionId":"0HN8EV61VI187"}
{"@t":"2024-11-27T15:44:18.6346507Z","@mt":"Failed to determine the https port for redirect.","@l":"Warning","@tr":"0abbd37f5b8ae167ff1ace4e2a37ff17","@sp":"1deb4975bd6d15bf","EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN8EV9BG8SE6:00000001","RequestPath":"/swagger","ConnectionId":"0HN8EV9BG8SE6"}
{"@t":"2024-11-27T15:44:44.1094846Z","@mt":"Unable to get IAM security credentials from EC2 Instance Metadata Service.","@l":"Error","@x":"Amazon.Runtime.AmazonServiceException: Unable to get IAM security credentials from EC2 Instance Metadata Service.\r\n   at Amazon.Runtime.DefaultInstanceProfileAWSCredentials.FetchCredentials()\r\n   at Amazon.Runtime.DefaultInstanceProfileAWSCredentials.GetCredentials()\r\n   at Amazon.Runtime.DefaultInstanceProfileAWSCredentials.GetCredentialsAsync()\r\n   at Amazon.Runtime.Internal.CredentialsRetriever.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.RetryHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.RetryHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.S3.Internal.AmazonS3ExceptionHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.ErrorCallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.MetricsHandler.InvokeAsync[T](IExecutionContext executionContext)\r\n   at MovieWave.Application.Services.StorageService.UploadFileAsync(FileDto fileDto, String folder) in C:\\Users\\denis\\source\\repos\\MovieWave\\MovieWave.Application\\Services\\StorageService.cs:line 34\r\n   at BannerController.CreateBanner(CreateBannerDto dto, UploadFileRequest request) in C:\\Users\\denis\\source\\repos\\MovieWave\\MovieWave.API\\Controllers\\BannerController.cs:line 45\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Prometheus.HttpMetrics.HttpRequestDurationMiddleware.Invoke(HttpContext context)\r\n   at Prometheus.HttpMetrics.HttpRequestCountMiddleware.Invoke(HttpContext context)\r\n   at Prometheus.HttpMetrics.HttpInProgressMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at MovieWave.API.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext httpContext) in C:\\Users\\denis\\source\\repos\\MovieWave\\MovieWave.API\\Middlewares\\ExceptionHandlingMiddleware.cs:line 22","@tr":"bbe0f96f7ffdb3a3b1a8a0f8f4f5429c","@sp":"668f9b89d432a575","RequestId":"0HN8EV9BG8SE9:00000001","RequestPath":"/api/v1/banner/create","ConnectionId":"0HN8EV9BG8SE9"}
{"@t":"2024-11-27T15:45:30.9184348Z","@mt":"Failed to determine the https port for redirect.","@l":"Warning","@tr":"4a15b1f26a92c834f87ed55041bad147","@sp":"369857a7561f35d0","EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN8EVA25H9OT:00000001","RequestPath":"/swagger","ConnectionId":"0HN8EVA25H9OT"}
{"@t":"2024-11-27T15:56:27.2486011Z","@mt":"Failed to determine the https port for redirect.","@l":"Warning","@tr":"ba5d6bddea4ac05517ff60d1dd905648","@sp":"c4b7624169722661","EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN8EVG5RDI6K:00000001","RequestPath":"/swagger","ConnectionId":"0HN8EVG5RDI6K"}
{"@t":"2024-11-27T16:02:10.7017699Z","@mt":"Failed to determine the https port for redirect.","@l":"Warning","@tr":"4942e7227d243b687bbf4e7ae84669e9","@sp":"3db973aeba3be7d9","EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN8EVJB7URNS:00000001","RequestPath":"/swagger","ConnectionId":"0HN8EVJB7URNS"}
